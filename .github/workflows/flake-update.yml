name: Flake Updater

on:
  schedule:
    - cron: "* */12 * * *"
  workflow_dispatch: {}

jobs:
  update_flake:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: false
      - name: Configure Nix Environment
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: accept-flake-config = true
      - name: Generate GitHub Bot Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"
      - name: Set GitHub Bot Username
        run: git config --global user.name "dev-baymax[bot]"
      - name: Set GitHub Bot Email
        run: git config --global user.email "132212085+dev-baymax[bot]@users.noreply.github.com"
      - name: Update Flake and Push
        shell: bash
        run: |
          has_pr_open=$(gh pr list --label flake --json number)
          if [ $has_pr_open != "[]" ]
          then
            echo "There is already a update PR, dont create a new one."

            gh pr checkout $(gh pr list --label flake  --json number | jq .[].number)
            commits_ahead=$(git rev-list --count HEAD..origin/main)
            echo "Commits ahead: $commits_ahead"
            git log --oneline -5
            echo "----------"
            git log --oneline -5 origin/main
            if [ $commits_ahead -ne 0 ]
            then
              git fetch origin
              git status
              git rebase origin/main
              git push --force-with-lease
            fi
            exit 0
          fi

          nix flake update

          git diff-index --quiet HEAD -- && echo "no changes" && exit 0
          git switch -c update-flake_$(date -I)
          git commit -am "flake.lock: Update $(date -I)"

          nix flake check --all-systems --show-trace

          git push -fu origin update-flake_$(date -I)
          PR=$(gh pr create \
          --base main \
          --body "Automatic package update for flake.lock on $(date -I)" \
          --label bot --label flake \
          --fill \
          --title "Update for flake.lock $(date -I)")

          gh pr merge --auto -r "$PR"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
